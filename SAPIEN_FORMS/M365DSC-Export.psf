<File version="3.2">
  <FileID>69fe4b7b-0e9e-4492-8c21-ca7bb6cd077e</FileID>
  <Preview>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
APB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMhAAAA
LhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4PgQA
AMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcIAM+H
AAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg
+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwg
ADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACA
CwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEA
AHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMh
AAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4
PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcI
AM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADg
AgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAA
AFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwI
AACACwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACe
DwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUC
wPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4
QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5EAAA
ABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8C
AADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDn
QwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA
8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAu
EACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAA
wAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cA
AAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5
EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAA
PB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+BAAAwAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIAL
BIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgAz4cAAAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAA
cIEA8HwIAACACwSA50MAAABcIAA8HwIAAOACAeD5EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEA
AAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAAXCAAPB8CAADgAgHg+RAAAAAXCADPhwAAALhAAHg+
BAAAwAUCwPMhAAAALhAAng8BAABwgQDwfAgAAIALBIDnQwAAAFwgADwfAgAA4AIB4PkQAAAAFwgA
z4cAAAC4QAB4PgQAAMAFAsDzIQAAAC4QAJ4PAQAAcIEA8HwIAACACwSA50MAAABcIAA8HwIAAOAC
AeD5EAAAABcIAM+HAAAAuEAAeD4EAADABQLA8yEAAAAuEACeDwEAAHCBAPB8CAAAgAsEgOdDAAAA
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
hlmg+bu/+/8B0uOllw/9EikAAAAASUVORK5CYII=</Preview>
  <Form>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
RR+gjj0AAA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabpageExport)
	{
		#TODO: Enter Validation Code here for Export Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageDeploy)
	{
		#TODO: Enter Validation Code here for Deploy Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageAudit)
	{
		#TODO: Enter Validation Code here for Audit Tab
		return $true
	}
	#Add more pages here
	
	return $true
}


#region Control Helper Functions
<#
	.SYNOPSIS
		Checks/Unchecks all resource nodes for a selected workload
	
	.DESCRIPTION
		Checks/Unchecks all resource nodes for a selected workload
	
	.PARAMETER WorkloadNode
		A description of the WorkloadNode parameter.
	
	.EXAMPLE
				PS C:\> Check-ResourceNodes -WorkloadNode $node
	
	.NOTES
		Additional information about the function.
#>
function Check-ResourceNodes
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1)]
		[System.Windows.Forms.TreeNode]$WorkloadNode
	)
	$selectedNodeText = $WorkloadNode.Text
	$nodesChecked = $WorkloadNode.Checked
	
	if ($selectedNodeText -in $M365DSCWorkloads)
	{
		$resourceNodesArr = $resourcesListTree.Nodes[$WorkloadNode.Index].Nodes.GetEnumerator()
		
		foreach ($node in $resourceNodesArr)
		{
			$node.Checked = $nodesChecked
		}
	}
}

function Get-CheckedNode
{
<#
	.SYNOPSIS
		This function collects a list of checked nodes in a TreeView

	.DESCRIPTION
		This function collects a list of checked nodes in a TreeView

	.PARAMETER  $NodeCollection
		The collection of nodes to search

	.PARAMETER  $CheckedNodes
		The ArrayList that will contain all the checked items
	
	.EXAMPLE
		$CheckedNodes = New-Object System.Collections.ArrayList
		Get-CheckedNode $treeview1.Nodes $CheckedNodes
		foreach($node in $CheckedNodes)
		{	
			Write-Host $node.Text
		}
#>
	param (
			[ValidateNotNull()]
			[System.Windows.Forms.TreeNodeCollection]$NodeCollection,
			[ValidateNotNull()]
			[System.Collections.ArrayList]$CheckedNodes
	)
	
	foreach ($Node in $NodeCollection)
	{
		if ($Node.Checked)
		{
			[void]$CheckedNodes.Add($Node)
		}
		Get-CheckedNode $Node.Nodes $CheckedNodes
	}
}

<#
	.SYNOPSIS
		This function creates the M365DSC Resource Node List
	
	.DESCRIPTION
		This function creates a TreeView list of M365DSC resource nodes categorized by workload
	
	.PARAMETER $Resources
		A description of the $Resources parameter.
	
	.PARAMETER $Workloads
		A description of the $Workloads parameter.
	
	.EXAMPLE
				PS C:\> Build-ResourceNodeList -$Resources $resources -$Workloads $workloads
	
#>
function Build-ResourceNodeList
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,Position = 1)]
		[System.Array]$Resources,
		
		[Parameter(Mandatory = $true,Position = 2)]
		[System.Array]$Workloads
	)
	
	#
	# TODO: Optimize this function using Array Lists instead of arrays and 
	#       remove unnecessary resourceMappings Array
	#
	# TODO: Add ToolTipText functionality for each node
	#
	
	# First generate the resource to workload mappings
	$resourceMappings = @()
	foreach ($resource in $Resources)
	{
		$resourceMappings += Get-M365DSCWorkload $resource
	}
	
	# Build workload nodes
	foreach ($workload in $Workloads)
	{
		# Add the parent workload
		$resourcesListTree.Nodes.Add($workload)
		
		# Add the children resources for the current parent workload
		foreach ($mapping in $resourceMappings)
		{
			if ($workload -eq $mapping.WorkloadName)
			{
				$workloadIndex = [array]::IndexOf($Workloads, $workload)
				$resourcesListTree.Nodes[$workloadIndex].Nodes.Add($mapping.Resource)
			}
		}
	}
}

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	#$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}


#endregion

#region General Events and Functions
$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if ($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for ($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if ($_.Cancel)
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	
	Update-NavButtons
}

$formM365DSCSnapshot_Load = {
	
	Update-NavButtons
	
	# Generate TreeView of Workloads and their respective resources
	Build-ResourceNodeList $M365DSCResources $M365DSCWorkloads
}

$tabcontrolWizard_SelectedIndexChanged = {
	#TODO: Place custom script here
	
}

$buttonFinish_Click = {
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}
#endregion

#region Export Events and Functions
$exportUsernameBox_TextChanged = {
	Update-NavButtons
}



$labelExportUserName_Click = {
	#TODO: Place custom script here
	
}

$labelEnterO365TenantCreds_Click = {
	#TODO: Place custom script here
	
}

$buttonExportPath_Click = {
	# Display Export File Path Dialog
	if ($exportFilePathDialog.ShowDialog() -eq 'OK')
	{
		$exportConfigPathBox.Text = $exportFilePathDialog.SelectedPath
	}
}

$buttonExport_Click = {
	# Build ArrayList of Checked Nodes
	$checkedNodes = New-Object System.Collections.ArrayList
	Get-CheckedNode $resourcesListTree.Nodes $checkedNodes
	
	# Parse out workloads from the checkedNodes ArrayList
	$configComponents = New-Object System.Collections.ArrayList
	foreach ($node in $checkedNodes)
	{
		$currNodeStr = (($node.ToString()).Split(':')[1]).Trim()
		if (-not ($M365DSCWorkloads.Contains($currNodeStr)))
		{
			$configComponents.Add($currNodeStr)
		}
	}
	
	# Define M365 Config object
	$configName = $boxConfigName.Text
	$fileName = $configName + ".ps1"
	$configObj = [M365Config]::New($fileName, $configComponents, $configName, $exportConfigPathBox.Text)
	
	# Grab creds entered in Text Boxes
	$username = $exportUsernameBox.Text
	$password = $exportPasswordBox.Text | ConvertTo-SecureString -AsPlainText -Force
	
	# Build source tenant creds object
	$srcCreds = [System.Management.Automation.PSCredential]::new($username, $password)
	Write-Host $srcCreds.UserName + "  " + $srcCreds.Password
	$res = $configObj.Export($srcCreds)
}

$resourcesListTree_AfterCheck = [System.Windows.Forms.TreeViewEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TreeViewEventArgs]
	# Toggle all resource nodes if a workload is selected
	Check-ResourceNodes $_.Node
}

$resourcesListTree_AfterSelect = [System.Windows.Forms.TreeViewEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TreeViewEventArgs]
	#TODO: Place custom script here
	
}
#endregion

#region Deploy Tab Events and Functions
$buttonDeployConfig_Click = {
	#TODO: Place custom script here
	
}

#endregion]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>