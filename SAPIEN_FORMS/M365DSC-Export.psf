<File version="3.2">
  <FileID>69fe4b7b-0e9e-4492-8c21-ca7bb6cd077e</FileID>
  <Preview>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</Preview>
  <Form>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
jgmuRQAA</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabpageExport)
	{
		#TODO: Enter Validation Code here for Export Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageDeploy)
	{
		#TODO: Enter Validation Code here for Deploy Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageAudit)
	{
		#TODO: Enter Validation Code here for Audit Tab
		return $true
	}
	#Add more pages here
	
	return $true
}


#region Control Helper Functions
<#
	.SYNOPSIS
		Checks/Unchecks all resource nodes for a selected workload
	
	.DESCRIPTION
		Checks/Unchecks all resource nodes for a selected workload
	
	.PARAMETER WorkloadNode
		A description of the WorkloadNode parameter.
	
	.EXAMPLE
				PS C:\> Check-ResourceNodes -WorkloadNode $node
	
	.NOTES
		Additional information about the function.
#>
function Check-ResourceNodes
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1)]
		[System.Windows.Forms.TreeNode]$WorkloadNode
	)
	$selectedNodeText = $WorkloadNode.Text
	$nodesChecked = $WorkloadNode.Checked
	
	if ($selectedNodeText -in $M365DSCWorkloads)
	{
		$resourceNodesArr = $resourcesListTree.Nodes[$WorkloadNode.Index].Nodes.GetEnumerator()
		
		foreach ($node in $resourceNodesArr)
		{
			$node.Checked = $nodesChecked
		}
	}
}

function Get-CheckedNode
{
<#
	.SYNOPSIS
		This function collects a list of checked nodes in a TreeView

	.DESCRIPTION
		This function collects a list of checked nodes in a TreeView

	.PARAMETER  $NodeCollection
		The collection of nodes to search

	.PARAMETER  $CheckedNodes
		The ArrayList that will contain all the checked items
	
	.EXAMPLE
		$CheckedNodes = New-Object System.Collections.ArrayList
		Get-CheckedNode $treeview1.Nodes $CheckedNodes
		foreach($node in $CheckedNodes)
		{	
			Write-Host $node.Text
		}
#>
	param (
			[ValidateNotNull()]
			[System.Windows.Forms.TreeNodeCollection]$NodeCollection,
			[ValidateNotNull()]
			[System.Collections.ArrayList]$CheckedNodes
	)
	
	foreach ($Node in $NodeCollection)
	{
		if ($Node.Checked)
		{
			[void]$CheckedNodes.Add($Node)
		}
		Get-CheckedNode $Node.Nodes $CheckedNodes
	}
}

<#
	.SYNOPSIS
		This function creates the M365DSC Resource Node List
	
	.DESCRIPTION
		This function creates a TreeView list of M365DSC resource nodes categorized by workload
	
	.PARAMETER $Resources
		A description of the $Resources parameter.
	
	.PARAMETER $Workloads
		A description of the $Workloads parameter.
	
	.EXAMPLE
				PS C:\> Build-ResourceNodeList -$Resources $resources -$Workloads $workloads
	
#>
function Build-ResourceNodeList
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,Position = 1)]
		[System.Array]$Resources,
		
		[Parameter(Mandatory = $true,Position = 2)]
		[System.Array]$Workloads
	)
	
	#
	# TODO: Optimize this function using Array Lists instead of arrays and 
	#       remove unnecessary resourceMappings Array
	#
	# TODO: Add ToolTipText functionality for each node
	#
	
	# First generate the resource to workload mappings
	$resourceMappings = @()
	foreach ($resource in $Resources)
	{
		$resourceMappings += Get-M365DSCWorkload $resource
	}
	
	# Build workload nodes
	foreach ($workload in $Workloads)
	{
		# Add the parent workload
		$resourcesListTree.Nodes.Add($workload)
		
		# Add the children resources for the current parent workload
		foreach ($mapping in $resourceMappings)
		{
			if ($workload -eq $mapping.WorkloadName)
			{
				$workloadIndex = [array]::IndexOf($Workloads, $workload)
				$resourcesListTree.Nodes[$workloadIndex].Nodes.Add($mapping.Resource)
			}
		}
	}
}

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	#$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}


#endregion

#region General Events and Functions
$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if ($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for ($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if ($_.Cancel)
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	
	Update-NavButtons
}

$formM365DSCSnapshot_Load = {
	
	Update-NavButtons
	
	# Generate TreeView of Workloads and their respective resources
	Build-ResourceNodeList $M365DSCResources $M365DSCWorkloads
}

$tabcontrolWizard_SelectedIndexChanged = {
	#TODO: Place custom script here
	
}

$buttonFinish_Click = {
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}
#endregion

#region Export Events and Functions
$exportUsernameBox_TextChanged = {
	Update-NavButtons
}



$labelExportUserName_Click = {
	#TODO: Place custom script here
	
}

$labelEnterO365TenantCreds_Click = {
	#TODO: Place custom script here
	
}

$buttonExportPath_Click = {
	# Display Export File Path Dialog
	if ($exportFilePathDialog.ShowDialog() -eq 'OK')
	{
		$exportConfigPathBox.Text = $exportFilePathDialog.SelectedPath
	}
}

$buttonExport_Click = {
	# Build ArrayList of Checked Nodes
	$checkedNodes = New-Object System.Collections.ArrayList
	Get-CheckedNode $resourcesListTree.Nodes $checkedNodes
	
	# Parse out workloads from the checkedNodes ArrayList
	$configComponents = New-Object System.Collections.ArrayList
	foreach ($node in $checkedNodes)
	{
		$currNodeStr = (($node.ToString()).Split(':')[1]).Trim()
		if (-not ($M365DSCWorkloads.Contains($currNodeStr)))
		{
			$configComponents.Add($currNodeStr)
		}
	}
	
	# Define M365 Config object
	$configName = $boxConfigName.Text
	$fileName = $configName + ".ps1"
	$configObj = [M365Config]::New($fileName, $configComponents, $configName, $exportConfigPathBox.Text)
	
	# Grab creds entered in Text Boxes
	$username = $exportUsernameBox.Text
	$password = $exportPasswordBox.Text | ConvertTo-SecureString -AsPlainText -Force
	
	# Build source tenant creds object
	$srcCreds = [System.Management.Automation.PSCredential]::new($username, $password)
	Write-Host $srcCreds.UserName + "  " + $srcCreds.Password
	
	$res = $configObj.Export($srcCreds)
}

$resourcesListTree_AfterCheck = [System.Windows.Forms.TreeViewEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TreeViewEventArgs]
	# Toggle all resource nodes if a workload is selected
	Check-ResourceNodes $_.Node
}

$resourcesListTree_AfterSelect = [System.Windows.Forms.TreeViewEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TreeViewEventArgs]
	#TODO: Place custom script here
	
}
#endregion

#region Deploy Tab Events and Functions
$buttonDeployConfig_Click = {
	#TODO: Implement Error Handling
	
	# Define M365 Config object
	$configFilePath = $textboxDeployConfigFilePath.Text
	$fileName = Split-Path $configFilePath -Leaf
	$configName = $fileName.Split(".")[0]
	
	$configDirPath = Split-Path $configFilePath -Parent
	$configObj = [M365Config]::New($fileName, $configName, $configDirPath)
	
	# Grab creds entered in Text Boxes
	$username = $textboxDeployUsername.Text
	$password = $textboxDeployPassword.Text | ConvertTo-SecureString -AsPlainText -Force
	
	# Build Destingation tenant creds object
	$destCreds = [System.Management.Automation.PSCredential]::new($username, $password)
	
	# Compile the config
	$res = $configObj.Compile($destCreds)
	
	if ($res -eq '0')
	{
		Write-Host "[+] Compilation completed."
	}
	
	# Deploy the compiled config
	$res = $configObj.Deploy()
	
	if ($res -eq '0')
	{
		Write-Host "[+] Deployment successful."
	}
}

$buttonDeployConfigPath_Click = {
	# Display Config File Dialog
	if ($deployConfigFilePickerDialog.ShowDialog() -eq 'OK')
	{
		$textboxDeployConfigFilePath.Text = $deployConfigFilePickerDialog.FileName
	}
}

#endregion

]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>