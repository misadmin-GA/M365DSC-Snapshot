<File version="3.2">
  <FileID>69fe4b7b-0e9e-4492-8c21-ca7bb6cd077e</FileID>
  <Preview>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
+Jnvb44ZxPdZAsBxpjMAEBERJyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
HIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcA
QEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQERE
PyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
HIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcA
QEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQERE
PyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
HIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcA
QEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQERE
PyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
HIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcA
QEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQERE
PyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
HIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcA
QEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQERE
PyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQAHIcAQEREPyQA
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
xD/7Z/8/PbihDBlyw2cAAAAASUVORK5CYII=</Preview>
  <Form>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
YfFtFPTBjdavsylxO/GPYed/ZD/CyttEAAA=</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabpageExport)
	{
		#TODO: Enter Validation Code here for Export Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageDeploy)
	{
		#TODO: Enter Validation Code here for Deploy Tab
		
		return $true
	}
	elseif ($tabPage -eq $tabpageAudit)
	{
		#TODO: Enter Validation Code here for Audit Tab
		return $true
	}
	#Add more pages here
	
	return $true
}


#region Control Helper Functions
<#
	.SYNOPSIS
		Checks/Unchecks all resource nodes for a selected workload
	
	.DESCRIPTION
		Checks/Unchecks all resource nodes for a selected workload
	
	.PARAMETER WorkloadNode
		A description of the WorkloadNode parameter.
	
	.EXAMPLE
				PS C:\> Check-ResourceNodes -WorkloadNode $node
	
	.NOTES
		Additional information about the function.
#>
function Check-ResourceNodes
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1)]
		[System.Windows.Forms.TreeNode]$WorkloadNode
	)
	$selectedNodeText = $WorkloadNode.Text
	$nodesChecked = $WorkloadNode.Checked
	
	if ($selectedNodeText -in $M365DSCWorkloads)
	{
		$resourceNodesArr = $resourcesListTree.Nodes[$WorkloadNode.Index].Nodes.GetEnumerator()
		
		foreach ($node in $resourceNodesArr)
		{
			$node.Checked = $nodesChecked
		}
	}
}

function Get-CheckedNode
{
<#
	.SYNOPSIS
		This function collects a list of checked nodes in a TreeView

	.DESCRIPTION
		This function collects a list of checked nodes in a TreeView

	.PARAMETER  $NodeCollection
		The collection of nodes to search

	.PARAMETER  $CheckedNodes
		The ArrayList that will contain all the checked items
	
	.EXAMPLE
		$CheckedNodes = New-Object System.Collections.ArrayList
		Get-CheckedNode $treeview1.Nodes $CheckedNodes
		foreach($node in $CheckedNodes)
		{	
			Write-Host $node.Text
		}
#>
	param (
			[ValidateNotNull()]
			[System.Windows.Forms.TreeNodeCollection]$NodeCollection,
			[ValidateNotNull()]
			[System.Collections.ArrayList]$CheckedNodes
	)
	
	foreach ($Node in $NodeCollection)
	{
		if ($Node.Checked)
		{
			[void]$CheckedNodes.Add($Node)
		}
		Get-CheckedNode $Node.Nodes $CheckedNodes
	}
}

<#
	.SYNOPSIS
		This function creates the M365DSC Resource Node List
	
	.DESCRIPTION
		This function creates a TreeView list of M365DSC resource nodes categorized by workload
	
	.PARAMETER $Resources
		A description of the $Resources parameter.
	
	.PARAMETER $Workloads
		A description of the $Workloads parameter.
	
	.EXAMPLE
				PS C:\> Build-ResourceNodeList -$Resources $resources -$Workloads $workloads
	
#>
function Build-ResourceNodeList
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true,Position = 1)]
		[System.Array]$Resources,
		
		[Parameter(Mandatory = $true,Position = 2)]
		[System.Array]$Workloads
	)
	
	#
	# TODO: Optimize this function using Array Lists instead of arrays and 
	#       remove unnecessary resourceMappings Array
	#
	# TODO: Add ToolTipText functionality for each node
	#
	
	# First generate the resource to workload mappings
	$resourceMappings = @()
	foreach ($resource in $Resources)
	{
		$resourceMappings += Get-M365DSCWorkload $resource
	}
	
	# Build workload nodes
	foreach ($workload in $Workloads)
	{
		# Add the parent workload
		$resourcesListTree.Nodes.Add($workload)
		
		# Add the children resources for the current parent workload
		foreach ($mapping in $resourceMappings)
		{
			if ($workload -eq $mapping.WorkloadName)
			{
				$workloadIndex = [array]::IndexOf($Workloads, $workload)
				$resourcesListTree.Nodes[$workloadIndex].Nodes.Add($mapping.Resource)
			}
		}
	}
}

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	#$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	#$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}


#endregion

#region General Events and Functions
$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting = [System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if ($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for ($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if ($_.Cancel)
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	
	Update-NavButtons
}

$formM365DSCSnapshot_Load = {
	
	Update-NavButtons
	
	# Generate TreeView of Workloads and their respective resources
	Build-ResourceNodeList $M365DSCResources $M365DSCWorkloads
}

$tabcontrolWizard_SelectedIndexChanged = {
	#TODO: Place custom script here
	
}

$buttonFinish_Click = {
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}
#endregion

#region Export Events and Functions
$exportUsernameBox_TextChanged = {
	Update-NavButtons
}

$buttonExportPath_Click = {
	# Display Export File Path Dialog
	if ($exportFilePathDialog.ShowDialog() -eq 'OK')
	{
		$exportConfigPathBox.Text = $exportFilePathDialog.SelectedPath
	}
}

$buttonExport_Click = {
	# Build ArrayList of Checked Nodes
	$checkedNodes = New-Object System.Collections.ArrayList
	Get-CheckedNode $resourcesListTree.Nodes $checkedNodes
	
	# Parse out workloads from the checkedNodes ArrayList
	$configComponents = New-Object System.Collections.ArrayList
	foreach ($node in $checkedNodes)
	{
		$currNodeStr = (($node.ToString()).Split(':')[1]).Trim()
		if (-not ($M365DSCWorkloads.Contains($currNodeStr)))
		{
			$configComponents.Add($currNodeStr)
		}
	}
	
	# Define M365 Config object
	$configName = $boxConfigName.Text
	$fileName = $configName + ".ps1"
	$configObj = [M365Config]::New($fileName, $configComponents, $configName, $exportConfigPathBox.Text)
	
	# Grab creds entered in Text Boxes
	$username = $exportUsernameBox.Text
	$password = $exportPasswordBox.Text | ConvertTo-SecureString -AsPlainText -Force
	
	# Build source tenant creds object
	$srcCreds = [System.Management.Automation.PSCredential]::new($username, $password)
	Write-Host $srcCreds.UserName + "  " + $srcCreds.Password
	
	$res = $configObj.Export($srcCreds)
}

$resourcesListTree_AfterCheck = [System.Windows.Forms.TreeViewEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TreeViewEventArgs]
	# Toggle all resource nodes if a workload is selected
	Check-ResourceNodes $_.Node
}

#endregion

#region Deploy Tab Events and Functions
$buttonDeployConfig_Click = {
	#TODO: Implement Error Handling
	
	# Define M365 Config object
	$configFilePath = $textboxDeployConfigFilePath.Text
	$fileName = Split-Path $configFilePath -Leaf
	$configName = $fileName.Split(".")[0]
	
	$configDirPath = Split-Path $configFilePath -Parent
	$configObj = [M365Config]::New($fileName, $configName, $configDirPath)
	
	# Grab creds entered in Text Boxes
	$username = $textboxDeployUsername.Text
	$password = $textboxDeployPassword.Text | ConvertTo-SecureString -AsPlainText -Force
	
	# Build Destingation tenant creds object
	$destCreds = [System.Management.Automation.PSCredential]::new($username, $password)
	
	# Compile the config
	$res = $configObj.Compile($destCreds)
	
	if ($res -eq '0')
	{
		Write-Host "[+] Compilation completed."
	}
	
	# Deploy the compiled config
	$res = $configObj.Deploy()
	
	if ($res -eq '0')
	{
		Write-Host "[+] Deployment successful."
	}
}

$buttonDeployConfigPath_Click = {
	# Display Config File Dialog
	if ($deployConfigFilePickerDialog.ShowDialog() -eq 'OK')
	{
		$textboxDeployConfigFilePath.Text = $deployConfigFilePickerDialog.FileName
	}
}

#endregion
]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>